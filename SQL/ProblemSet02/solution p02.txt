Create table Location 
(locationid int PRIMARY KEY, 
name varchar(30), 
sunlight decimal(2,2), 
water decimal(2,2)); 

Create table Gardener 
(gardenerid int  PRIMARY KEY, 
name varchar(30), 
age int); 

Create table Plant 
(plantid int  PRIMARY KEY, 
name varchar(30), 
sunlight decimal(2,2), 
water decimal(2,2), 
weight decimal(2,2)); 

Create table planted 
(plantFK int, 
gardenerFK int, 
locationFK int, 
date1 varchar(20), 
seeds int, 
foreign key(plantFK) references plant(plantid), 
foreign key(gardenerFK) references gardener(gardenerid), 
foreign key(locationFK) references location(locationid)); 

Create table picked 
(plantFK int, 
gardenerFK int, 
locationFK int, 
date1 varchar(20), 
amount int, 
weight float, 
foreign key(plantFK) references plant(plantid), 
foreign key(gardenerFK) references gardener(gardenerid), 
foreign key(locationFK) references location(locationid)); 


Insert into location values(0, 'East', 0.28, 0.80); 
Insert into location values(1, 'North', 0.17, 0.84); 
Insert into location values(2, 'West', 0.38, 0.48); 
Insert into location values(3, 'South', 0.45, 0.66); 

/* Set-up for gardener Table */
Insert into gardener values(0, 'Mother', 36); 
Insert into gardener values(1, 'Father', 38); 
Insert into gardener values(2, 'Tim', 15); 
Insert into gardener values(3, 'Erin', 12); 

/* Set-up for plant Table */
Insert into plant values(0, 'Carrot', 0.26, 0.82, 0.08); 
Insert into plant values(1, 'Beet', 0.44, 0.80, 0.04); 
Insert into plant values(2, 'Corn', 0.44, 0.76, 0.26); 
Insert into plant values(3, 'Tomato', 0.42, 0.80, 0.16); 
Insert into plant values(4, 'Radish', 0.28, 0.84, 0.02); 
Insert into plant values(5, 'Lettuce', 0.29, 0.85, 0.03); 

/* Set-up for planted Table */
Insert into planted values(0, 0, 0 , '18-APR-2012', 28); 
Insert into planted values(0, 1, 1 , '14-APR-2012', 14); 
Insert into planted values(1, 0, 2 , '18-APR-2012', 36); 
Insert into planted values(2, 1, 3 , '14-APR-2012', 20); 
Insert into planted values(2, 2, 2 , '19-APR-2012', 12); 
Insert into planted values(3, 3, 3 , '25-APR-2012', 38); 
Insert into planted values(4, 2, 0 , '30-APR-2012', 30); 
Insert into planted values(5, 2, 0 , '15-APR-2012', 30); 

/* Set-up for picked Table *
Insert into picked values(0, 2, 0 , '18-AUG-2012', 28, 2.32); 
Insert into picked values(0, 3, 1 , '16-AUG-2012', 12, 1.02); 
Insert into picked values(2, 1, 3 , '22-AUG-2012', 52, 12.96); 
Insert into picked values(2, 2, 2 , '28-AUG-2012', 18, 4.58); 
Insert into picked values(3, 3, 3 , '22-AUG-2012', 15, 3.84); 
Insert into picked values(4, 2, 0 , '16-JUL-2012', 23, 0.52); 


1)Write a valid SQL statement that calculates the total weight of all corn cobs that were picked from the garden

mysql> select sum(pi.weight) from plant p join picked pi on p.plantid =pi.plantFK where p.name='Corn';
+--------------------+
| sum(pi.weight)     |
+--------------------+
| 17.539999961853027 |
+--------------------+
1 row in set (0.00 sec)


2)For some reason Erin has change his location for picking the tomato to North. Write the corresponding query.

mysql> update picked set locationFK=1 where plantFK=3;
Query OK, 1 row affected (0.06 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from picked;
+---------+------------+------------+-------------+--------+--------+
| plantFK | gardenerFK | locationFK | date1       | amount | weight |
+---------+------------+------------+-------------+--------+--------+
|       0 |          2 |          0 | 18-AUG-2012 |     28 |   2.32 |
|       0 |          3 |          1 | 16-AUG-2012 |     12 |   1.02 |
|       2 |          1 |          3 | 22-AUG-2012 |     52 |  12.96 |
|       2 |          2 |          2 | 28-AUG-2012 |     18 |   4.58 |
|       3 |          3 |          1 | 22-AUG-2012 |     15 |   3.84 |
|       4 |          2 |          0 | 16-JUL-2012 |     23 |   0.52 |
+---------+------------+------------+-------------+--------+--------+
6 rows in set (0.00 sec)


3)Insert a new column 'Exper' of type Number (30) to the 'gardener' table which stores Experience of the of person. 
How will you modify this to varchar2(30).

mysql> alter table gardener add Exper int(30);
Query OK, 4 rows affected (0.50 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql>  alter table gardener modify Exper varchar(30);
Query OK, 4 rows affected (0.53 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from gardener;
+------------+--------+------+-------+
| gardenerid | name   | age  | Exper |
+------------+--------+------+-------+
|          0 | Mother |   36 | NULL  |
|          1 | Father |   38 | NULL  |
|          2 | Tim    |   15 | NULL  |
|          3 | Erin   |   12 | NULL  |
+------------+--------+------+-------+
4 rows in set (0.00 sec)


4)Write a query to find the plant name which required seeds less than 20 which plant on 14-APR

mysql> select p.name,pl.seeds from plant p join planted pl on p.plantid=pl.plantFK where pl.date1 like '%14-APR%' and pl.seeds<20;
+--------+-------+
| name   | seeds |
+--------+-------+
| Carrot |    14 |
+--------+-------+
1 row in set (0.00 sec)


5)List the amount of sunlight and water to all plants with names that start with letter 'c' or letter 'r'.

mysql> select name,sunlight, water from plant where name like 'c%' or name like 'r%';
+--------+----------+-------+
| name   | sunlight | water |
+--------+----------+-------+
| Carrot |     0.26 |  0.82 |
| Corn   |     0.44 |  0.76 |
| Radish |     0.28 |  0.84 |
+--------+----------+-------+
3 rows in set (0.00 sec)


6)Write a valid SQL statement that displays the plant name and the total amount of seed required for each plant that were plant in the garden. 
The output should be in descending order of plant name.

mysql> select p.name,sum(pl.seeds) from plant p join planted pl on p.plantid=pl.plantFK group by p.plantid order by p.name desc;
+---------+---------------+
| name    | sum(pl.seeds) |
+---------+---------------+
| Tomato  |            38 |
| Radish  |            30 |
| Lettuce |            30 |
| Corn    |            32 |
| Carrot  |            42 |
| Beet    |            36 |
+---------+---------------+
6 rows in set (0.02 sec)


7)Write a valid SQL statement that calculates the average number of items produced per seed planted for each plant type:
( (Average Number of Items = Total Amount Picked / Total Seeds Planted.)



mysql> select p.name,pi.amount/pl.seeds as avg from plant p
    -> join planted pl
    -> on p.plantid=pl.plantFK
    -> join picked pi
    -> on p.plantid=pi.plantFK
    -> group by p.name;
+--------+--------+
| name   | avg    |
+--------+--------+
| Carrot | 1.0000 |
| Corn   | 2.6000 |
| Radish | 0.7667 |
| Tomato | 0.3947 |
+--------+--------+
4 rows in set (0.04 sec)

mysql> SELECT Plant.Name, SUM(Picked.Amount)/SUM(Planted.Seeds) AS yield FROM Plant, Planted, Picked
    -> WHERE Planted.PlantFK = Picked.PlantFK AND Planted.LocationFK = Picked.LocationFK
    -> AND Plant.PlantID=Picked.PlantFK GROUP BY Plant.Name;
+--------+--------+
| Name   | yield  |
+--------+--------+
| Carrot | 0.9524 |
| Corn   | 2.1875 |
| Radish | 0.7667 |
+--------+--------+
3 rows in set (0.01 sec)





8)Write a valid SQL statement that would produce a result set like the following:

 name |  name  |    date    | amount 
------|--------|------------|-------- 
 Tim  | Radish | 2012-07-16 |     23 
 Tim  | Carrot | 2012-08-18 |     28 



mysql> select g.name , p.name ,pi.date1, pi.amount from gardener g
    -> inner join picked pi
    -> on g.gardenerid=pi.gardenerFK
    -> inner join plant p
    -> on p.plantid=pi.plantFK
    -> where g.name='Tim' and pi.amount>20;
+------+--------+-------------+--------+
| name | name   | date1       | amount |
+------+--------+-------------+--------+
| Tim  | Carrot | 18-AUG-2012 |     28 |
| Tim  | Radish | 16-JUL-2012 |     23 |
+------+--------+-------------+--------+
2 rows in set (0.00 sec)



9)Find out persons who picked from the same location as he/she planted.


mysql> select distinct(g.name) from gardener g join picked pi
    -> on g.gardenerid=pi.gardenerFK join planted pl on
    -> pl.gardenerFK=pi.gardenerFK and pl.locationFK=pi.locationFK;
+--------+
| name   |
+--------+
| Tim    |
| Father |
+--------+
2 rows in set (0.00 sec)



10)Create a view that lists all the plant names picked from all locations except
 ’West’ in the month of August.




